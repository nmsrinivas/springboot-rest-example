https://www.edureka.co/blog/what-is-docker-container  good notes

sudo yum -y install docker
sudo systemctl start docker
sudo systemctl status docker
sudo systemctl enable docker
sudo systemctl status docker

sudo docker run hello-world  (check in local hello-world image in local, if it will check from docker hub. (it will take 
it from docker hub and put it in local)
to make sure docker is running successfully).

echo $USER (centos)
sudo groupadd docker
sudo usermod -aG docker $USER  ( after this command we need to duplicate session)
docker run hello-world

sudo systemctl restart docker  (hello world)
docker images  (to see docker images in local)

docker file :

FROM node:carbon
WORKDIR /usr/src/app              [it will create empty dir]
COPY package*.json ./
RUN npm install
COPY .  .
EXPOSE 3000
CMD ["npm","start"]

push the docker file

sudo git clone https://github.com/nmsrinivas/cicd-pipeline-gradle.git   (clone to some dir like /opt/)

sudo docker build -t nmsrinivas/sampleapp .       (build and it create the image)

docker images          (show images)
sudo docker run -p  8081:3000 -d nmsrinivas/sampleapp     (run the image, put it in container)
sudo docker ps                    (check the image)


docker ps -al       (it will give docker container and image info)
docker exec -t d70ee3212230 bash  (to go inside the container)

docker stop d70ee3212230    (to stop the container)
docker rm d70ee3212230 


docker rmi d70ee3212230 -f   (to remove the image)

 sudo docker logs -f 1f82c712fd75  ( to check the logs)

COPY /root/.m2/repository/uk/co/cyberbliss/books-example/1.0-SNAPSHOT/books-example-1.0-SNAPSHOT.jar /opt/


FROM java:8
MAINTAINER Srinivas "nmsrinivas@gmail.com"
WORKDIR /usr/src/app
EXPOSE 9080
COPY . .
CMD java -jar /usr/src/app/target/books-example-1.0-SNAPSHOT.jar

-------------------------------------------------------------------------------------------------
Dockerrised jenkins : https://medium.com/@manav503/how-to-build-docker-images-inside-a-jenkins-container-d59944102f30
==================================================================
FROM jenkinsci/jenkins:lts
USER root
RUN apt-get update -qq \
    && apt-get install -qqy apt-transport-https ca-certificates curl gnupg2 software-properties-common 
RUN curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -
RUN add-apt-repository \
   "deb [arch=amd64] https://download.docker.com/linux/debian \
   $(lsb_release -cs) \
   stable"
RUN apt-get update  -qq \
    && apt-get install docker-ce=17.12.1~ce-0~debian -y
RUN usermod -aG docker jenkins

create the jenkins inside the docker :

sudo docker build -t nmsrinivas/dockerjenkins . 

sudo docker run -p  8081:8080 -d nmsrinivas/dockerjenkins

/usr/bin/docker-current: Error response from daemon: driver failed programming external connectiv
(create persistance the volume with below script)

docker container run -d -p 8081:8080 -v /var/run/docker.sock:/var/run/docker.sock nmsrinivas/dockerjenkins

http://18.236.191.216:8081/login?from=%2F   --dockerised jenkins will run 

below steps to push the jenkins image to docker hub.

docker login --username=nmsrinivas --email=nmsrinivas@gmail.com
Flag --email has been deprecated, will be removed in 1.14.
Password:
Login Succeeded

docker push  nmsrinivas/dockerjenkins






